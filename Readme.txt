We developed a hotel management system  to streamline and automate various operations within the hotel, such as reservation management, guest information, room allocation, billing, and reviewing . This system aims to improve efficiency, enhance guest satisfaction, and provide accurate and real-time data for effective decision-making.
In Basic SQL we have used simple commands to create 5 tables to store data in.These tables include hotel, room type, review, bookings, and customer details, a sixth table was to be made for the option to sign in with google but unfortunately, they have not accepted our request yet. The insert command has been used to populate the data into the file.
We have used trigger functions. These functions will be executed after every insertion in the hotel table .it will automatically update the values for it in room type (Executive room, Prime or Deluxe) and assign its respective fixed price.
We have created a views table that will store specific values from the customer and a review table. It will store data of such customers that are in both customer and review table. Meaning if a customer has given a review, it will be shown only then (inner join).
HTML and CSS have been used to create and style the website. The html files convert to ejs files once JavaScript is included in them.
Dry queries have been run in the index.js file from the backend where values are stored in a row variable. We have used the post method to do these actions. The await query function waits for these values in the JS file of the front end. These values are used appropriately. Once the values are used, they are ‘stringified’ and stored in the backend.
The insert command has been used to populate the data into the file. Create command has been used for create table, select query reads the data from the table and delete function can be used to drop a table if desired. Table values are updated through advanced SQL as well as stated above(triggers).

